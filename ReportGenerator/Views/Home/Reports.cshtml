@{
    
    Layout = "~/Views/Shared/_ProHealthLayout.cshtml";
}

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>

<style>
    .modal {
        position: fixed; /* Stay in place */
        z-index: 25000; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }



    .sizeNormal {
        font-size: 16px;
    }

    .borderRadius {
        border-radius: 10px;
    }

    .width {
        width: 250px;
    }

    #load {
        position: sticky;
        z-index: 3;
        -webkit-touch-callout: none; /* iOS Safari */
        -webkit-user-select: none; /* Safari */
        -moz-user-select: none; /* Firefox */
        -ms-user-select: none; /* Internet Explorer/Edge */
        user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */
    }

    #overlay {
        position: fixed;
        display: none;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0,0,0,0.5);
        z-index: 2;
    }

    td.details-control {
        background: url('/examples/resources/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url('/examples/resources/details_close.png') no-repeat center center;
    }

    div.slider {
        display: none;
    }

    table.dataTable tbody td.no-padding {
        padding: 0;
    }

    td.details-control {
        background: url('../resources/details_open.png') no-repeat center center;
        cursor: pointer;
    }

    tr.shown td.details-control {
        background: url('../resources/details_close.png') no-repeat center center;
    }

    #OrganizationDrop {
        background-color: white;
        color: black;
        /*background-color:aqua;*/
    }

    #ddlProjectvalue {
        background-color: white;
        color: black;
        /*color:white;
    background-color:aqua;*/
    }

    #sprintDrop {
        background-color: white;
        color: black;
    }

    #daysDrop {
        background-color: white;
        color: black;
    }
    /**/


    /* Modal Content */
    
    #dataTable1 {
        padding: 2px 16px;
        /*position: fixed;*/
        background-color: #fefefe;
        margin: 10%;
        padding: 0;
        border: 1px solid #888;
        width: 80%;
        box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0,0,0,0.19);
        -webkit-animation-name: animatetop;
        -webkit-animation-duration: 0.4s;
        animation-name: animatetop;
        animation-duration: 0.4s
    }

    /* Add Animation */
    @@-webkit-keyframes animatetop {
        from {
            top: -300px;
            opacity: 0
        }

        to {
            top: 0;
            opacity: 1
        }
    }

    @@keyframes animatetop {
        from {
            top: -300px;
            opacity: 0
        }

        to {
            top: 0;
            opacity: 1
        }
    }

    /* The Close Button */
    .close {
        color: white;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: #000;
            text-decoration: none;
            cursor: pointer;
        }

    .modal-header {
        padding: 2px 16px;
        background-color: #5cb85c;
        color: white;
    }

    .modal-body {
        padding: 2px 16px;
    }

    .modal-footer {
        padding: 2px 16px;
        background-color: #5cb85c;
        color: white;
    }



    .modal-lg {
        max-width: 80% !important;
    }

    .table-striped tbody tr:nth-of-type(odd) {
        background-color: rgba(0, 0, 0, 0.05);
    }

    .modal-dialog,
    .modal-content {
        /* 80% of window height */
        height: 97%;
    }

    .card {
        margin-left: 10px;
        margin-right: 10px;
    }

    .modal-body {
        /* 100% = dialog height, 120px = header + footer */
        max-height: calc(100% - 0px) !important;
        overflow-y: scroll;
    }
    .modal-lg {
    max-width: 80% !important;
}

.table-striped tbody tr:nth-of-type(odd) {
    background-color: rgba(0, 0, 0, 0.05);
}

.modal-dialog,
.modal-content {
    /* 80% of window height */
    height: 97%;
}

.card {

}

.modal-body {
    /* 100% = dialog height, 120px = header + footer */
    max-height: calc(100% - 0px) !important;
    overflow-y: scroll;
}

</style>
<div id="overlay"></div>

<div class="modal fade" id="myModal">
    <div class="modal-dialog  modal-lg ">
        <!-- Modal content-->
        <div class="modal-content" style="border-radius: 5px; ">
            <div class="modal-header" style="padding: 0.5rem 1rem">
                <h4 id="modal-title" style="font-size:25px;" class="modal-title display-4 ml-3"></h4>
                <button type="button" class="close" style="box-shadow:none" data-dismiss="modal">&times;</button> 
                @*onclick="hide()"*@
            </div>
            <div id="dataTable12" class="modal-body " style="font-size:14px">
                <div id="dataTable1"></div>
            </div>
            <div class="modal-footer"></div>
        </div>

    </div>
</div>

<br />
<div class="form-horizontal" style="font-size: 16px; margin-left: 0.5%">
    <div class="form-row">
        <div class="col-md-3">
            <label class="control-label" style="padding-right: 40px">Organization</label>
            <select name="cs3" id="OrganizationDrop" class="form-control borderRadius width" style="opacity:0.8;"> </select>
        </div>

        <div class="col-md-3">

            <label class="control-label" style="padding-right:40px">Project Name</label>
            <select name="cs3" id="ddlProjectvalue" class="form-control borderRadius width" style="opacity:0.8;"> </select>
        </div>
        <div class="col-md-3">

            <label class="control-label" style="padding-right:40px">Sprint</label>
            <select name="cs3" id="sprintDrop" class="form-control borderRadius width" style="opacity:0.8;"> </select>
        </div>
        <div class="col-md-3">
            <label class="control-label" style="padding-right: 40px">Days</label>
            <select name="cs3" id="daysDrop" class="form-control borderRadius width" style="opacity:0.8;">
                <option>21 Days</option>
                <option>7 Days</option>
                <option>14 Days</option>
                <option>30 Days</option>
            </select>
        </div>
    </div>
</div>


<br />
<img id="load" style="margin-left:35%" height="100" width="100" src="~/Content/Icons/loadinggif.gif" hidden />

@*started icons*@
<div class="row" id="row1">
    <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-header card-header-warning card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">content_copy</i>
                </div>
                <p class="card-category">Failed Builds</p>
                <h3 class="card-title" id="buildicon">
                </h3>
            </div>
            <div class="card-footer">
                <div class="stats">
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-header card-header-success card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">store</i>
                </div>
                <p class="card-category">Failed Release</p>
                <h3 class="card-title" id="releaseicon"></h3>
            </div>
            <div class="card-footer">
                <div class="stats">
                    @*<i class="material-icons">date_range</i> Last 24 Hours*@
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-header card-header-danger card-header-icon">
                <div class="card-icon">
                    <i class="material-icons">info_outline</i>
                </div>
                <p class="card-category">Critical Bugs</p>
                <h3 class="card-title" id="criticalbugicon"></h3>
            </div>
            <div class="card-footer">
                <div class="stats">
                    @*<i class="material-icons">local_offer</i> Tracked from Github*@
                </div>
            </div>
        </div>
    </div>
    <div class="col-xl-3 col-lg-6 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-header card-header-info card-header-icon">
                <div class="card-icon">
                    <i class="fa fa-cog"></i>
                </div>
                <p class="card-category">Slake</p>
                <h3 class="card-title" id="workitemicon"></h3>
            </div>
            <div class="card-footer">
                <div class="stats">
                    @*<i class="material-icons">update</i> Just Updated*@
                </div>
            </div>
        </div>
    </div>
</div>

@*icons Ended*@
<div class="content">
    <div class="container-fluid">
        <div class="row" id="row2">
            <div class="col-xl-6 col-lg-12">
                <div class="card card-chart">
                    <div class="card-header card-header-success">

                        <canvas class="ct-chart" id="dailySalesChart" style="background-color:white"></canvas>
                    </div>
                    <div class="card-body">
                        <h4 class="card-title">Build report</h4>
                        <p class="card-category">
                            <span class="text-success" id="buildspan"><i class="fa fa-long-arrow-up"></i>  </span> failed builds found.
                        </p>
                    </div>
                    <div class="card-footer">
                        <div class="stats">
                            <button id="buildButton" class="btn btn-success" data-toggle="modal" data-target="#myModal" style="margin-right:25px;">View Details</button>
                            @*<i class="material-icons">access_time</i> updated 4 minutes ago*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-lg-12">
                <div class="card card-chart">
                    <div class="card-header card-header-success" style="background-color:white">
                        <div>
                            <div class="ct-chart" id="websiteViewsChart" style="width: 300px; height: 200px;" align="center"></div>
                        </div>
                    </div>
                    <div class="card-body">
                        <h4 class="card-title">Critical Bugs report</h4>
                        <p><img src="~/Content/Icons/yellow1.jpg" height="10" width="10" /> - warning   <img src="~/Content/Icons/red.png" height="10" width="10" /> - Critical</p>

                        <p class="card-title">

                            <span class="text-success" id="criticalbugspan"><i class="fa fa-long-arrow-up"></i>  </span> critical bugs found.
                        </p>
                    </div>
                    <div class="card-footer">
                        <button id="CriticalBugButton" class="btn btn-success" data-toggle="modal" data-target="#myModal">View Details</button>
                        <div class="stats">
                            @*<i class="material-icons"">view work item</i>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="container-fluid">
        <div class="row" id="row3">
            <div class="col-xl-6 col-lg-12">
                <div class="card card-chart">
                    <div class="card-header card-header-success">
                        <canvas class="ct-chart" id="Releasechart" style="background-color:white"></canvas>
                    </div>
                    <div class="card-body">
                        <h4 class="card-title">Release Report</h4>
                        <p class="card-title">
                            <span class="text-success" id="releasespan"><i class="fa fa-long-arrow-up"></i>  </span> failed Releases found.
                        </p>
                    </div>
                    <div class="card-footer">
                        <div class="stats">
                            <button id="releaseButton" class="btn btn-success"data-toggle="modal" data-target="#myModal">View Details</button>
                            @*<i class="material-icons">access_time</i> updated 4 minutes ago*@
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xl-6 col-lg-12">
                <div class="card card-chart">
                    <div class="card-header card-header-success">
                        <canvas class="ct-chart" id="workitemchart" style="background-color:white"></canvas>
                    </div>
                    <div class="card-body">
                        <h4 class="card-title">Expired WorkItems</h4>
                        <p class="card-title">

                            <span class="text-success" id="workitemspan"><i class="fa fa-long-arrow-up"></i>  </span> expired workitemss found.
                        </p>
                    </div>
                    <div class="card-footer">
                        <div class="stats">
                            <button id="slakeButton" class="btn btn-success" data-toggle="modal" data-target="#myModal">View Details</button>
                            @*<i class="material-icons">access_time</i> updated 4 minutes ago*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@*<div id="orgchartsdiv">
</div>*@
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0"></script>
<script src="~/JSFile/sprint.js"></script>
<script src="~/JSFile/popup.js"></script>

<script>
        var buildSession=0;
        var ReleaseCountTotal=0;
                var modal = document.getElementById("myModal");
                window.onclick = function (event) {
                    if (event.target == modal) {
                        modal.style.display = "none";
                    }
            }
            //$('.close').click(function () { //(event) {
            //       // if (event.target == modal) {
            //            modal.style.display = "none";
            //        //}
            //})
        var failedcountBuild;
    var resultId = 0;
    var iterationStore = [];
    var FailedBuildListStore = [];
    var ReleaseStore = [];
    var FailedReleaseListStore = [];
    var BugList = [];
    var WorkitemStore = [];
    
    var TotalBuildList = [];
    var TotalReleaseList = [];
    var TotalBugList = [];
    var TotalslakeList = [];
        $(document).ready(function () {
            
            var DataStore = [];
            var BuildStore = [];
            var CriticalStore = [];

            $('#row1').hide();
            $('#row2').hide();
            $('#row3').hide();
            $('#row4').hide();
            
            $('.dropdown-submenu a.test').on("click", function (e) {
                $(this).next('ul').toggle();
                e.stopPropagation();
                e.preventDefault();
            });


            //GetOrganization
            var optionhtml1 = '<option value="' +
                0 + '">' + "--Select Organization--" + '</option>';
            $("#OrganizationDrop").append(optionhtml1);
               document.getElementById("overlay").style.display = "block";
               document.getElementById("load").hidden = false;
            $.ajax({
                url: '@Url.Action("OrganizationList", "Home")',
                type: 'Get',
                data: {},
                //dataType: 'json',
                success: function (data1) {
                    document.getElementById("overlay").style.display = "none";
               document.getElementById("load").hidden = true;
                    data = JSON.parse(data1);
                    //alert("Success");
                    var count = Object.keys(data).length;
                    if (count >= 1) {
                        $.each(data, function (i) { //data.value

                            var optionhtml = '<option value="' +
                                //data.value[i].accountId + '">' + data.value[i].accountName + '</option>';
                                 data[i].accountId + '">' + data[i].accountName + '</option>';
                            $("#OrganizationDrop").append(optionhtml);
                        });
                    };
                },

                error: function (request, error) {
                    document.getElementById("overlay").style.display = "none";
                    document.getElementById("load").hidden = true;
                    alert('Something went wrong');

                }
            });

            //project Dropdown
            $('#OrganizationDrop').change(function () {
                $('.orgChartload').show();
                document.getElementsByClassName("row").hidden = true;
                document.getElementById("overlay").style.display = "block";
                document.getElementById("load").hidden = false;
                
                $('#orgChartload').show();
                $('#orgChartload1').show();
                $('#orgbuild').text("");
                $('#sprintDrop').text("Select Sprint");
                $('#daysDrop').find('option:first').attr('selected', 'selected');
                $('#daysDrop').val(0);
                $('#daysDrop option:eq(0)').attr('selected', 'selected');
                $('#daysDrop').get(0).selectedIndex = 0;
                $('#orgrelease').text("");
                $('#orgcriticalbug').text("");
                $('#orgworkitem').text("");
                $('#row1').hide();
                $('#row2').hide();
                $('#row3').hide();
                $('#row4').hide();
                $("#critWorkitem").text("");
                $("#WorkitemDeadLine").text("");
                $("#build1").text("");
                $("#release1").text("");
                $('#bugid').css("background-color", "white");

                $('#dataTable').DataTable().destroy();
                $('#dataTable').remove();
                var orgName = $("#OrganizationDrop option:selected").text();
                 document.getElementById("overlay").style.display = "block";
               document.getElementById("load").hidden = false;
                if (orgName != null || orgName != "" && pat != null || pat != "")
                    $.ajax({
                        url: '@Url.Action("GetProjects","Home")',
                        type: 'Get',
                        data: { 'orgName': orgName },//, 'pat': pat },
                        //dataType: 'json',
                        success: function (data1) {
                            $("#ddlProjectvalue").empty();
                            data = JSON.parse(data1);
                            var count = Object.keys(data).length;
                            if (count >= 1) {
                                var optionhtml1 = '<option value="' +
                                    0 + '">' + "--Select Project--" + '</option>';
                                $("#ddlProjectvalue").append(optionhtml1);
                                $.each(data, function (i) { //data.value
                                    var optionhtml = '<option value="' +
                                       // data.value[i].id + '">' + data.value[i].name + '</option>';
                                         data[i].id + '">' + data[i].name + '</option>';
                                    $("#ddlProjectvalue").append(optionhtml);

                                });
                                document.getElementById("load").hidden = true;
                                document.getElementById("overlay").style.display = "none";
                            };
                        },

                        error: function (request, error) {
                             document.getElementById("overlay").style.display = "none";
                            document.getElementById("load").hidden = true;
                            $("#ddlProjectvalue").empty();
                            alert('Something went wrong');
                        }
                    });
            })
        });

    function iteration() {
        $('#sprintDrop').empty();
        var org = $("#OrganizationDrop option:selected").text();
        var projectvalue = $("#ddlProjectvalue option:selected").text();

        $.ajax({
            url: '@Url.Action("iterationMethod","Home")',// IterationsList
            type: 'Get',
            data: { 'ORG': org, 'project': projectvalue },//, 'pat': pat },
            dataType: 'json',
            success: function (data) {
                iterationStore = [];
                //data = json.parse(data1);
                iterationStore = data;
                console.log("Iterations");
                console.log(iterationStore);
                var optionhtml1 = '<option value="' +
                                    0 + '">' + "--Select Sprint--" + '</option>';
                                $("#sprintDrop").append(optionhtml1);
                $.each(data, function (i) {
                    console.log(data[i].value);
                    $.each(data[i].value, function (j) {
                        console.log(data[i].value[j]);
                        var optionhtml = '<option value="' +
                                        data[i].value[j].id + '">' + data[i].value[j].path + '</option>';
                                    $("#sprintDrop").append(optionhtml);
                    })

                })
            },
            Error: function () {

            }

        })
    }

        $('#ddlProjectvalue').change(function () {
          
            document.getElementById("overlay").style.display = "block";
            document.getElementById("load").hidden = false;
            $('#sprintDrop').text("Select Sprint");
                $('#daysDrop').find('option:first').attr('selected', 'selected');
                $('#daysDrop').val(0);
                $('#daysDrop option:eq(0)').attr('selected', 'selected');
                $('#daysDrop').get(0).selectedIndex = 0;

            $('.orgChartload').hide();
            $('#orgChartload').hide();
            $('#orgChartload1').hide();
            $('#row1').show();
            $('#row2').show();
            $('#row3').show();
            $('#row4').hide();
            var projectvalue = $("#ddlProjectvalue option:selected").val();
            if (projectvalue == "0") {
                 $("#critWorkitem").text("");
                $("#WorkitemDeadLine").text("");
                $("#build1").text("");
            $("#release1").text("");
            $("#critWorkitem").css("background-color", "red");
                $('#bugid').css("background-color", "white");
                return;
            }
            
                $("#critWorkitem").text("");
                $("#WorkitemDeadLine").text("");
                $("#build1").text("");
            $("#release1").text("");
            $("#critWorkitem").css("background-color", "red");
                $('#bugid').css("background-color", "white");
            var projectName = $("#ddlProjectvalue option:selected").text();
              $('#sprintDrop').empty();
            iteration();
             document.getElementById("overlay").style.display = "block";
             document.getElementById("load").hidden = false;
                if (projectName != null || projectName != "")
                    $.ajax({
                        url: '@Url.Action("Build","Home")',
                        type: 'Get',
                        data: { 'projectName': projectName },//, 'pat': pat },
                        //dataType: 'json',
                        success: function (data1) {
                            data = JSON.parse(data1);
                            TotalBuildList = data;
                            BuildStore = data;
                            var count = Object.keys(data).length;

                            var builddata1=0

                            $.each(data.value, function (m) {
                                builddata1++;
                            })

                            console.log('build ' + buildSession +'build data'+builddata1)
                           
                            var diffDays;
                            failedcountBuild = 0;
                            FailedBuildListStore = [];
                            console.log(data);
                                $.each(data.value, function (i) {
                                    console.log(data.value[i].finishTime);
                                    var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
                                    var firstDate = new Date(data.value[i].finishTime);
                                    var today = new Date();
                                    var date1234 = new Date(data.value[i].finishTime);
                                    console.log("Finish Date:   "+date1234);
                                    diffDays = Math.round(Math.abs((firstDate - today) / oneDay));
                                    if (data.value[i].result == "failed")
                                         {
                                        if (diffDays <= 21) {
                                            FailedBuildListStore.push(data.value[i]);
                                        failedcountBuild++;

                                        }
                                          }
                                });
                            $("#buildspan").text(failedcountBuild);
                            $("#buildicon").text(failedcountBuild);
                             $("#build1").text(failedcountBuild);
                            jsonResult = failedcountBuild;// count;
                            jsonResult2 = builddata1;
                            console.log("FailedBuildListStore displaying the array");
                            console.log(FailedBuildListStore);
                            drawChart();
                        },

                        error: function (request, error) {
                        }
                    });


                 var orgName=$("#OrganizationDrop option:selected").text();
                var projectName = $("#ddlProjectvalue option:selected").text();


                if (orgName != null || orgName!="" || projectName != null || projectName != "")
                document.getElementById("overlay").style.display = "block";
               document.getElementById("load").hidden = false;
                    $.ajax({
                        url: '@Url.Action("WorkitemDeadline","Home")',
                        type: 'Get',
                        data: { 'projectName':projectName},//, 'pat': pat },
                       // dataType: 'json',
                        success: function (data1) {
                            WorkitemStore = [];
                            if (data1 == "null") {
                                var count = 0;
                                $('#WorkitemDeadLine').text(count);
                                $('#workitemspan').text(count);
                            }
                            else {
                                data = JSON.parse(data1);
                               // WorkitemStore = data;

                                TotalslakeList =data;
                                 var countwork = 0;
                                $.each(data, function (ib) {

                                    console.log("slake " + data[ib].fields["System.CreatedDate"]);
                                    console.log("slake " + data[ib].fields["System.Title"]);
                                    var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
                                    var firstDate = new Date(data[ib].fields["System.CreatedDate"]);
                                    var today = new Date();

                                    diffDays = Math.round(Math.abs((firstDate - today) / oneDay));

                                    if (diffDays <= 21) {
                                        countwork = countwork + 1;
                                        WorkitemStore.push(data[ib])
                                        
                                        }
                                    })
                             
                                var count = Object.keys(data).length;
                                $('#WorkitemDeadLine').text(countwork);
                                $("#workitemicon").text(countwork);
                             
                                var count = Object.keys(data).length;
                            }
                            var workitemcounttotal = 0;
                            if (data != null || data != undefined)
                            {
                            $.each(data, function (i) {

                                workitemcounttotal = data[i].totalworkItemCounts
                                console.log('not session'+workitemcounttotal)
                                });
                               }
                            if (data == null ||data == undefined)
                            {
                                console.log('session')
                                workitemcounttotal = '@Session["WorkItemstotal"]';
                            }
                            workitemdeadline1 = workitemcounttotal;//'@Session["WorkItemstotal"]';
                            var storecount = 0;
                            $.each(data, function (m) {
                                storecount++;
                            })
                            jsonResult = count;
                            
                            $('#workitemspan').text(countwork);
                            drawChartDeadLine();
                        },

                        error: function (request, error) {
                        }
                    });
             document.getElementById("overlay").style.display = "block";
               document.getElementById("load").hidden = false;
                // Critical Work
                if (orgName != null || orgName!="" || projectName != null || projectName != "")
                    $.ajax({
                        url: '@Url.Action("Workitem","Home")',
                        type: 'Get',
                        data: { 'projectName':projectName },//, 'pat': pat },
                      //  dataType: 'json',
                        success: function (data1) {

                            var countCrit=0;
                            if (data1 == "null") {
                                count = 0;
                            }
                            else {
                                data = JSON.parse(data1);
                                TotalBugList = data;
                                BugList = [];
                                // CriticalStore = data;
                                AllCriticalBugs = data;
                                console.log('critical bug starts');
                                $.each(data, function (ia) {
                                    console.log("critical Bug " + data[ia].fields["System.CreatedDate"]);
                                    console.log("critical Bug " + data[ia].fields["System.Title"]);
                                    var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
                                    var firstDate = new Date(data[ia].fields["System.CreatedDate"]);
                                    var today = new Date();

                                    diffDays = Math.round(Math.abs((firstDate - today) / oneDay));

                                    if (diffDays <= 21) {
                                        BugList.push(data[ia]);
                                        countCrit = countCrit + 1;
                                        }
                                    })
                                //      alert('Critical Work Item')
                                var count = Object.keys(data).length;

                            }
                            $('#critWorkitem').text(countCrit);
                            $('#criticalbugspan').text(countCrit);
                            $("#criticalbugicon").text(countCrit);
                                    workitemSession = '@Session["WorkItemscount"]';

                            jsonResultbug = countCrit;
                            google.charts.load('current', {'packages':['gauge']});
                            google.charts.setOnLoadCallback(drawChartbug);
                             
                        },

                        error: function (request, error) {
                        }
                    });

                 var projectName12 = $("#ddlProjectvalue option:selected").text();

            if (projectName12 != null || projectName12 != "")
                     document.getElementById("overlay").style.display = "block";
                     document.getElementById("load").hidden = false;

                    $.ajax({
                        url: '@Url.Action("Release","Home")',
                        type: 'Get',
                        data: {'projectName':projectName12},//, 'pat': pat },
                        //dataType: 'json',
                        success: function (data1) {
                            FailedReleaseListStore = [];
                            data = JSON.parse(data1);

                            TotalReleaseList = data;

                            //ReleaseStore = data;
                            var count = Object.keys(data).length;
                            console.log('result count' +count)
                              ReleaseCountTotal = 0;
                            $.each(data.value, function (m) {

                                ReleaseCountTotal++;
                            });
                            $.each(data.value, function (i) {
                            })

                            var failedReleases = [];
                            failedcountrelease = 0;
                    console.log(data);
                    $.each(data.value, function (i) {
                        // release.environments[0].deploySteps[0].status
                        var oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds
                        var firstDate = new Date(data.value[i].createdOn);
                        var date12345 = new Date(data.value[i].createdOn);
                        console.log("createdOn release:   "+date12345);
                        console.log("modified on"+firstDate);
                                var today = new Date();
                                var diff1 = parseInt(firstDate - today);
                                var diffDays1 = Math.round(Math.abs((today - firstDate) / oneDay));
                        var statusData = ""; /*data.value[i]["environments"]*/
                        if (data.value[i]["environments"] != null || data.value[i]["environments"] != undefined)
                        {
                            if (data.value[i].environments[0] != null || data.value[i].environments[0] != undefined) {
                                if (data.value[i].environments[0].deploySteps != null || data.value[i].environments[0].deploySteps != undefined) {
                                    if (data.value[i].environments[0].deploySteps.length > 0) {
                                        if (data.value[i].environments[0].deploySteps[0].releaseDeployPhases != null || data.value[i].environments[0].deploySteps[0].releaseDeployPhases != undefined) {
                                            if (data.value[i].environments[0].deploySteps[0].releaseDeployPhases.length > 0) {
                                                if (data.value[i].environments[0].deploySteps[0].releaseDeployPhases[0].status != null || data.value[i].environments[0].deploySteps[0].releaseDeployPhases[0].status != undefined) {
                                                    statusData = data.value[i].environments[0].deploySteps[0].releaseDeployPhases[0].status;
                                                    if (statusData == "failed") {
                                                    // failedReleases.push(data.value[i]);
                                                   // failedcountrelease++;
                                                        if (diffDays1 <= 21) {
                                                            FailedReleaseListStore.push(data.value[i]);
                                                            failedcountrelease++;
                                                        }
                                        }
                                                }

                                            }
                                        }
                                    }
                                }
                            }
                        }
                        console.log("release",statusData);
                        console.log("failed releases"+failedcountrelease);
                        })

                            jsonResult = failedcountrelease;
                            jsonResult1 = ReleaseCountTotal;
                            $("#releasespan").text(failedcountrelease);
                            $('#release').text(failedcountrelease);
                            $('#releaseicon').text(failedcountrelease);
                        resultId = count;
                             //jsonResultrelease = count;
                            drawChartRelease();
                            document.getElementById("overlay").style.display = "none";
                            document.getElementById("load").hidden = true;
                        },

                        error: function (request, error) {
                             document.getElementById("overlay").style.display = "none";
               document.getElementById("load").hidden = true;
                       //     alert('Something went wrong');
                        }
                    });
        })
            //Release
        //});
    var lineChart;
    function drawChart() {
        $('#dailySalesChart').empty();
        var i;
        var datestore1 = [];
        for (i = 0; i < 21; i++) {
            var date1 = new Date();
            date1.setDate(date1.getDate()+1 - 21);
            date1.setDate(date1.getDate() + i);
           // var Faildate = new Date(FailedBuildListStore[k].lastChangedDate);
                                    var ddd = date1.getDate();
            var mmm = date1.getMonth(); //January is 0!
            mmm = mmm + 1;
                                    var yyyyy = date1.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
            datestore1.push(Faildate);//(date.getDate());
        
        }
        var LineDataStore1 = [];
        $.each(datestore1, function (yi) {
            var Datecountwork1 = 0;
            $.each(FailedBuildListStore, function (zi) {
                console.log(zi);
                 var Faildate = new Date(FailedBuildListStore[zi].finishTime);
                var ddd = Faildate.getDate();
                var mmm = Faildate.getMonth(); //January is 0!
                mmm = mmm + 1;
                                    var yyyyy = Faildate.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
                if (Faildate == datestore1[yi]) {
                    Datecountwork1 = Datecountwork1 + 1;

                 }
            });
            LineDataStore1.push(Datecountwork1);
         });
        var lastchangedArray = [];
        
    var canvas = document.getElementById("dailySalesChart");
    var ctx = canvas.getContext("2d");

            options = {
                 responsive: true,
                maintainAspectRatio: false
        };
        if (lineChart != undefined) {
            lineChart.destroy();
        }
             lineChart = new Chart(ctx, {
                 type: 'line',
                data: {
                    labels: datestore1,
                    datasets: [{
                        label: 'Failed Builds',
                        //  backgroundColor: 'rgb(153,50,204)',
                         borderColor: 'rgb(255, 99, 132)',
                        data: LineDataStore1
                    }]

                }
            });
             options: {}

        document.getElementById("overlay").style.display = "none";
        document.getElementById("load").hidden = true;

    }
    
    function drawChartbug() {
            var totalworkitems = workitemSession;
        var total = totalworkitems - jsonResultbug;
        var bug;
        if (jsonResultbug == 5) {
            bug = 93;
        }
        else if (jsonResultbug > 5) {
            bug = 100;
        }
        else if (jsonResultbug == 3) {
            bug = 75;
        }
        else if (jsonResultbug == 4) {
            bug = 85;
        }
        else if (jsonResultbug == 2) {
            bug = 50;
        }
        else if (jsonResultbug == 1) {
            bug = 25;
        }
        else {
            bug = 0;
        }
        //graud chart
        var data = google.visualization.arrayToDataTable([
          ['Label', 'Value'],

          ['',bug ]
        ]);

        var options = {
          width: 450, height: 200,
          redFrom: 90, redTo: 100,
          yellowFrom: 75, yellowTo: 90,
          //greenFrom: 10, greenTo = 74,
          minorTicks: 5
        };

        var chart = new google.visualization.Gauge(document.getElementById('websiteViewsChart'));

                       function selectHandler() {
          var selectedItem = chart.getSelection()[0];
                        if (selectedItem) {
                $('#dataTable').DataTable().destroy();
                        $('#dataTable').remove();
              var topping = data.getValue(selectedItem.row, 0);
              modal.style.display = "block";
              //alert('The user selected ' + topping);
              var orgName = $("#OrganizationDrop option:selected").text();
              var projName = $("#ddlProjectvalue option:selected").text();
                  tabledata = "<table id='dataTable'><thead><tr><th>ID</th><th>Title</th><th>Assigned To</th></thead><tbody>";
                            console.log(data);
                            $.each(CriticalStore, function (i) {
                                tabledata += "<tr class='tableData details-control'><td>" + CriticalStore[i].id + "</td><td><a href='https://dev.azure.com/"+orgName+"/"+projName+"/_workitems/edit/"+CriticalStore[i].id+"'>" + CriticalStore[i]["fields"]["System.Title"] + "</a></td><td>" + (CriticalStore[i]["fields"]["AssignedTo"] != null ? CriticalStore[i]["fields"]["AssignedTo"]["displayName"] :"") + "</td></tr > ";
                            });

                  tabledata += "</tbody></table>";
                  console.log(tabledata);
                  $("#dataTable1").append(tabledata);
                    table = $('#dataTable').DataTable();


          }
        }

        google.visualization.events.addListener(chart, 'select', selectHandler);

        //    //
        chart.draw(data, options);

        document.getElementById("overlay").style.display = "none";
        document.getElementById("load").hidden = true;
    }
    var lineChartrel;
    function drawChartRelease() {
            var date = new Date();
        date.setDate(date.getDate() - 21);
        console.log(date);
       // alert(date);
        var i;
        var datestore1 = [];
        for (i = 0; i < 21; i++) {
            var date1 = new Date();
            date1.setDate(date1.getDate()+1 - 21);
            date1.setDate(date1.getDate() + i);
           // var Faildate = new Date(FailedBuildListStore[k].lastChangedDate);
                                    var ddd = date1.getDate();
            var mmm = date1.getMonth(); //January is 0!
            mmm = mmm + 1;
                                    var yyyyy = date1.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
            datestore1.push(Faildate);//(date.getDate());
            //text += cars[i] + "<br>";
        }
        var LineDataStore1 = [];
        $.each(datestore1, function (yi) {
            console.log("Failed Build Check");
            console.log(yi);
            console.log(FailedBuildListStore);
            var Datecountrel = 0;
            $.each(FailedReleaseListStore, function (zi) {
                console.log(zi);
                 var Faildate = new Date(FailedReleaseListStore[zi].createdOn);
                                    var ddd = Faildate.getDate();
                var mmm = Faildate.getMonth(); //January is 0!
                mmm = mmm + 1;
                                    var yyyyy = Faildate.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
                if (Faildate == datestore1[yi]) {
                    Datecountrel = Datecountrel + 1;
                 }
            });
            LineDataStore1.push(Datecountrel);
         });
        var lastchangedArray = [];
        $.each(FailedReleaseListStore, function (ki) {
            var Faildate = new Date(FailedReleaseListStore[ki].createdOn);
                                    var ddd = Faildate.getDate();
            var mmm = Faildate.getMonth(); //January is 0!
            mmm = mmm + 1;
                                    var yyyyy = Faildate.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
             lastchangedArray.push(Faildate);
                });
        console.log("last changed Array display");
        console.log(lastchangedArray);

    var canvas = document.getElementById("Releasechart");
    var ctx = canvas.getContext("2d");

            options = {
                 responsive: true,
                maintainAspectRatio: false
        };
         if (lineChartrel != undefined) {
            lineChartrel.destroy();
        }
             lineChartrel = new Chart(ctx, {
                 type: 'line',
                data: {
                    labels: datestore1,
                    datasets: [{
                        label: 'Failed Releases',
                        //  backgroundColor: 'rgb(153,50,204)',
                         borderColor: 'rgb(255, 99, 132)',
                        data: LineDataStore1
                    }]

                }
            });
             options: {}

        document.getElementById("overlay").style.display = "none";
        document.getElementById("load").hidden = true;

     
                }


    var lineChartwork;
        function drawChartDeadLine() {
                  //  WorkitemStore
                        var date = new Date();
        date.setDate(date.getDate() - 21);
        console.log(date);
       // alert(date);
        var i;
        var datestore1 = [];
        for (i = 0; i < 21; i++) {
            var date1 = new Date();
            date1.setDate(date1.getDate()+1 - 21);
            date1.setDate(date1.getDate() + i);
           // var Faildate = new Date(FailedBuildListStore[k].lastChangedDate);
            var ddd = date1.getDate();
            var mmm = date1.getMonth(); //January is 0!
            mmm = mmm + 1;
                                    var yyyyy = date1.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
            datestore1.push(Faildate);//(date.getDate());
            //text += cars[i] + "<br>";
        }
        var LineDataStore1 = [];
        $.each(datestore1, function (yi) {
            console.log("expired workitem Check");
            console.log(yi);
            var Datecountwork1 = 0;
            $.each(WorkitemStore, function (zi) {
                console.log(zi);
                 var Faildate = new Date(WorkitemStore[zi]["fields"]["System.CreatedDate"]);
                                    var ddd = Faildate.getDate();
                var mmm = Faildate.getMonth(); //January is 0!
                mmm = mmm + 1;
                                    var yyyyy = Faildate.getFullYear();
            Faildate = mmm + '/' + ddd + '/' + yyyyy;
                if (Faildate == datestore1[yi]) {
                    Datecountwork1 = Datecountwork1 + 1;
                 }
            });
            LineDataStore1.push(Datecountwork1);
         });
        var lastchangedArray = [];
        
    var canvas = document.getElementById("workitemchart");
    var ctx = canvas.getContext("2d");

            options = {
                 responsive: true,
                maintainAspectRatio: false
                    };

                    if (lineChartwork != undefined) {
                        lineChartwork.destroy();
                    }
            lineChartwork = new Chart(ctx, {
                 type: 'line',
                data: {
                    labels: datestore1,
                    datasets: [{
                        label: 'Slake WorkItems',
                        //  backgroundColor: 'rgb(153,50,204)',
                         borderColor: 'rgb(255, 99, 132)',
                        data: LineDataStore1
                    }]
                }
            });
             options: {}
        document.getElementById("overlay").style.display = "none";
        document.getElementById("load").hidden = true;
                    }
</script>